library(readxl)
library(dplyr)
file_1 <- read_excel("2.1.xlsx")
file_2 <- read_excel("2.3.xlsx")
file_3 <- read_excel("3.3.xlsx")
file_4 <- read_excel("4.3.xlsx")
d <- data.frame(V1=c(23, 45, 56), V2=c(45, 45, 67))
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- rownames(d)
d <- cbind(id=id, d)
## set colnames to OP's wishes
colnames(d) <- paste0("V", 1:ncol(d))
glimpse(d)
library(dplyr)
library(stringr)
library(ggplot2)
d <- data.frame(V1=c(23, 45, 56), V2=c(45, 45, 67))
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- rownames(d)
d <- cbind(id=id, d)
## set colnames to OP's wishes
colnames(d) <- paste0("V", 1:ncol(d))
glimpse(d)
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- rownames(d)
d <- cbind(id=id, d)
## set colnames to OP's wishes
colnames(d) <- paste0("Hellya", 1:ncol(d))
glimpse(d)
# Buck data from many countries
Rawfile <- read.csv("owid-covid-data.csv")
getwd()
getwd()
setwd(D:\Phuc\College\XacSuatThongKe\RStudio)
setwd("D:\Phuc\College\XacSuatThongKe\RStudio")
getwd()
setwd("D:/Phuc/College/XacSuatThongKe/RStudio")
# Buck data from many countries
Rawfile <- read.csv("owid-covid-data.csv")
verbose_selection <- c(location, date, total_cases, new_cases, new_cases_smoothed,
total_deaths, new_deaths, new_deaths_smoothed, reproduction_rate,
total_tests, total_tests_per_thousand, population_density)
library(dplyr)
library(stringr)
library(ggplot2)
verbose_selection <- c(location, date, total_cases, new_cases, new_cases_smoothed,
total_deaths, new_deaths, new_deaths_smoothed, reproduction_rate,
total_tests, total_tests_per_thousand, population_density)
verbose_selection <- c(location, date, total_cases, new_cases, new_cases_smoothed,
total_deaths, new_deaths, new_deaths_smoothed, reproduction_rate,
total_tests, total_tests_per_thousand, population_density)
verbose_selection <- c(location, date, new_cases, new_cases_smoothed,
total_deaths, new_deaths, new_deaths_smoothed, reproduction_rate,
total_tests, total_tests_per_thousand, population_density)
# Buck data from many countries
Rawfile <- read.csv("owid-covid-data.csv")
verbose_selection <- c(location, date, total_cases, new_cases, new_cases_smoothed,
total_deaths, new_deaths, new_deaths_smoothed, reproduction_rate,
total_tests, total_tests_per_thousand, population_density)
simple_selection <- c(location, date, total_cases, new_cases, total_deaths, new_deaths)
# Load buck data from many countries
Rawfile <- read.csv("owid-covid-data.csv")
# Load buck data from many countries
Countries <- Rawfile %>%
select (c(location, date, total_cases, new_cases, new_cases_smoothed,
total_deaths, new_deaths, new_deaths_smoothed, reproduction_rate,
total_tests, total_tests_per_thousand, population_density))
SimpleCountries <- Rawfile %>%
select (c(location, date, total_cases, new_cases, total_deaths, new_deaths))
glimpse(Countries)
glimpse(Countries)
glimpse(SimpleCountries)
# Filter for specific countries and cleaning data
ShortVietnam <- ShortCountries %>%
filter (location == 'Vietnam')
# Filter for specific countries and cleaning data
SimpleVietnam <- SimpleCountries %>%
filter (location == 'Vietnam')
glimpse(Vietnam)
glimpse(SimpleVietnam)
View(SimpleVietnam)
# Filter for specific countries and cleaning data
SimpleVietnam <- SimpleCountries %>%
filter (location == 'Vietnam') %>%
desc(date)
glimpse(SimpleVietnam)
# Filter for specific countries and cleaning data
SimpleVietnam <- SimpleCountries %>%
filter (location == 'Vietnam') %>%
desc(date)
# Filter for specific countries and cleaning data
SimpleVietnam <- SimpleCountries %>%
filter (location == 'Vietnam') %>%
desc(date)
# Filter for specific countries and cleaning data
SimpleVietnam <- SimpleCountries %>%
filter (location == 'Vietnam') %>%
arrange(date) %>%
desc()
# Filter for specific countries and cleaning data
SimpleVietnam <- SimpleCountries %>%
filter (location == 'Vietnam') %>%
arrange(desc(date))
View(SimpleVietnam)
# Filter for specific countries and cleaning data
SimpleVietnam <- SimpleCountries %>%
filter (location == 'Vietnam') %>%
arrange(date)
View(SimpleVietnam)
View(SimpleVietnam)
id <- rownames(weekly)
# Attempt to group data weekly
weekly <- SimpleVietnam
id <- rownames(weekly)
id
weekly
View(weekly)
# Attempt to group data weekly
weekly <- SimpleVietnam
id <- rownames(weekly)
weekly <- cbind(id=id, weekly)
View(weekly)
# Attempt to group data weekly
weekly <- SimpleVietnam
id <- rownames(weekly)
weekly <- cbind(id=id, weekly)
glimpse(weekly)
# Attempt to group data weekly
weekly <- SimpleVietnam
id <- rownames(weekly)
weekly <- cbind(id=id, weekly)
glimpse(weekly)
weekly <- weekly %>%
mutate(week=id%%7)
weekly <- weekly %>%
mutate(week= id%/%7)
rlang::last_error()
class (weekly$week)
View(weekly)
class (weekly$id)
# Attempt to group data weekly
weekly <- SimpleVietnam
id <- rownames(weekly)
weekly <- cbind(id=as.numeric(id), weekly)
glimpse(weekly)
weekly <- weekly %>%
mutate(week= id%/%7)
class (weekly$id)
View(weekly)
weekly <- weekly %>%
mutate(week=id%/%7)
View(weekly)
glimpse(weekly)
WeeklyVietnam <- weekly %>%
mutate(week=id%/%7) %>%
group_by(week) %>%
summarise(week, weekly_cases=sum(new_cases), weekly_deaths=sum(new_deaths)) %>%
arrange(week)
# Attempt to group data weekly
weekly <- SimpleVietnam
id <- rownames(weekly)
weekly <- cbind(id=as.numeric(id), weekly)
glimpse(weekly)
WeeklyVietnam <- weekly %>%
mutate(week=id%/%7) %>%
group_by(week) %>%
summarise(week, weekly_cases=sum(new_cases), weekly_deaths=sum(new_deaths)) %>%
arrange(week)
WeeklyVietnam <- weekly %>%
mutate(week=id%/%7) %>%
group_by(week) %>%
summarise(week, weekly_cases=sum(new_cases), weekly_deaths=sum(new_deaths)) %>%
arrange(week) %>% ungroup(week)
WeeklyVietnam <- weekly %>%
mutate(week=id%/%7) %>%
group_by(week) %>%
summarise(week, weekly_cases=sum(new_cases), weekly_deaths=sum(new_deaths)) %>%
arrange(week)
View(WeeklyVietnam)
WeeklyVietnam <- weekly %>%
mutate(week=id%/%7) %>%
group_by(week) %>%
summarise(week, weekly_cases=sum(new_cases), weekly_deaths=sum(new_deaths)) %>%
distinc(week) %>%
arrange(week)
WeeklyVietnam <- weekly %>%
mutate(week=id%/%7) %>%
group_by(week) %>%
summarise(week, weekly_cases=sum(new_cases), weekly_deaths=sum(new_deaths)) %>%
distinct(week) %>%
arrange(week)
View(WeeklyVietnam)
WeeklyVietnam <- weekly %>%
mutate(week=id%/%7) %>%
group_by(week) %>%
summarise(week, weekly_cases=sum(new_cases), weekly_deaths=sum(new_deaths)) %>%
distinct(week) %>%
arrange(week)
WeeklyVietnam <- weekly %>%
mutate(week=id%/%7) %>%
group_by(week) %>%
summarise(week, weekly_cases=sum(new_cases), weekly_deaths=sum(new_deaths)) %>%
# distinct(week) %>%
arrange(week)
WeeklyVietnam <- weekly %>%
mutate(week=id%/%7) %>%
group_by(week) %>%
summarise(week, weekly_cases=sum(new_cases), weekly_deaths=sum(new_deaths)) %>%
# distinct(week) %>%
arrange(week)
View(WeeklyVietnam)
View(WeeklyVietnam)
WeeklyVietnam <- weekly %>%
mutate(week=id%/%7) %>%
group_by(week) %>%
summarise(week, weekly_cases=sum(new_cases), weekly_deaths=sum(new_deaths)) %>%
distinct(week) %>%
arrange(week)
WeeklyVietnam <- weekly %>%
mutate(week=id%/%7) %>%
group_by(week) %>%
summarise(week, weekly_cases=sum(new_cases), weekly_deaths=sum(new_deaths)) %>%
arrange(week) %>%
distinct(week)
View(WeeklyVietnam)
WeeklyVietnam <- weekly %>%
mutate(week=id%/%7) %>%
group_by(week) %>%
summarise(week, weekly_cases=sum(new_cases), weekly_deaths=sum(new_deaths)) %>%
arrange(week) %>%
distinct(week, weekly_cases)
View(WeeklyVietnam)
WeeklyVietnam <- weekly %>%
mutate(week=id%/%7) %>%
group_by(week) %>%
summarise(week, weekly_cases=sum(new_cases), weekly_deaths=sum(new_deaths)) %>%
arrange(week) %>%
distinct(week, .keep_all=TRUE)
View(WeeklyVietnam)
# Filter for specific_country and cleaning data
specific_country <- 'Vietnam'
SimpleVietnam <- SimpleCountries %>%
filter (location == specific_country) %>%
arrange(date)
glimpse(SimpleVietnam)
# Attempt to group data weekly
weekly <- SimpleVietnam
id <- rownames(weekly)
weekly <- cbind(id=as.numeric(id), weekly)
glimpse(weekly)
WeeklyVietnam <- weekly %>%
mutate(week=id%/%7) %>%
group_by(week) %>%
summarise(week, weekly_cases=sum(new_cases), weekly_deaths=sum(new_deaths)) %>%
arrange(week) %>%
distinct(week, .keep_all=TRUE)
glimpse(WeeklyVietnam)
glimpse(weekly)
glimpse(SimpleVietnam)
# Filter for specific_country and cleaning data
specific_country <- 'Vietnam'
SimpleVietnam <- SimpleCountries %>%
filter (location == specific_country) %>%
arrange(date)
SimpleVietnam.m[is.na(SimpleVietnam.m)] <- 0
glimpse(SimpleVietnam)
SimpleVietnam.m[is.na(SimpleVietnam.m)] <- 0
# Filter for specific_country and cleaning data
specific_country <- 'Vietnam'
SimpleVietnam <- SimpleCountries %>%
filter (location == specific_country) %>%
arrange(date)
SimpleVietnam[is.na(SimpleVietnam)] <- 0
glimpse(SimpleVietnam)
# Attempt to group data weekly
weekly <- SimpleVietnam
id <- rownames(weekly)
weekly <- cbind(id=as.numeric(id), weekly)
glimpse(weekly)
WeeklyVietnam <- weekly %>%
mutate(week=id%/%7) %>%
group_by(week) %>%
summarise(week, weekly_cases=sum(new_cases), weekly_deaths=sum(new_deaths)) %>%
arrange(week) %>%
distinct(week, .keep_all=TRUE)
glimpse(WeeklyVietnam)
library(dplyr)
library(stringr)
library(ggplot2)
# Import data from csv
Rawfile <- read.csv("owid-covid-data.csv")
# Load buck data from many countries
Countries <- Rawfile %>%
select (c(location, date, total_cases, new_cases, new_cases_smoothed,
total_deaths, new_deaths, new_deaths_smoothed, reproduction_rate,
total_tests, total_tests_per_thousand, population_density))
SimpleCountries <- Rawfile %>%
select (c(location, date, total_cases, new_cases, total_deaths, new_deaths))
glimpse(Countries)
glimpse(SimpleCountries)
# Filter for specific_country and cleaning data
specific_country <- 'Vietnam'
SimpleVietnam <- SimpleCountries %>%
filter (location == specific_country) %>%
arrange(date)
SimpleVietnam[is.na(SimpleVietnam)] <- 0
glimpse(SimpleVietnam)
# Attempt to group data weekly
weekly <- SimpleVietnam
id <- rownames(weekly)
weekly <- cbind(id=as.numeric(id), weekly)
glimpse(weekly)
WeeklyVietnam <- weekly %>%
mutate(week=id%/%7) %>%
group_by(week) %>%
summarise(week, weekly_cases=sum(new_cases), weekly_deaths=sum(new_deaths)) %>%
arrange(week) %>%
distinct(week, .keep_all=TRUE)
glimpse(WeeklyVietnam)
# TODO: collect this script into function:
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
# TODO: collect this script into function:
#     [df] GetWeeklyData(string country)
View(WeeklyVietnam)
